@model Tuple<IEnumerable<WebApplication.Models.BoardModel>, WebApplication.Models.PageStatisticsModel, WebApplication.Models.UserInfoModel>

@{
    ViewBag.Title = "Forum";
}
@Styles.Render("~/Styles/forum")

@{
    var offset = new[] { -1, -35, -69, -103, -138, -172, -206, -240, -275, -309 };
}
<ul class="list-group col-md-4 col-md-offset-4">
    <li class="list-group-item counters">
        @{
            foreach (var symbol in (Model.Item2 == null ? "1" : Model.Item2.AllVisits.ToString()).Reverse().Select((x, i) => Tuple.Create(x, i)))
            {
                var digit = (int)char.GetNumericValue(symbol.Item1);
                <div class="digits" style="background: url('/Images/Counter.png') @offset[digit]px 0; right: @(35 * symbol.Item2 + 5)px;"></div>
            }
        }
        All visits
    </li>
    <li class="list-group-item counters">
        @{
            foreach (var symbol in (Model.Item2 == null ? "1" : Model.Item2.AllHits.ToString()).Reverse().Select((x, i) => Tuple.Create(x, i)))
            {
                var digit = (int)char.GetNumericValue(symbol.Item1);
                <div class="digits" style="background: url('/Images/Counter.png') @offset[digit]px 0; right: @(35 * symbol.Item2 + 5)px;"></div>
            }
        }
        All hits
    </li>
    <li class="list-group-item counters">
        @{
            foreach (var symbol in (Model.Item2 == null ? "1" : Model.Item2.VisitsToday.ToString()).Reverse().Select((x, i) => Tuple.Create(x, i)))
            {
                var digit = (int)char.GetNumericValue(symbol.Item1);
                <div class="digits" style="background: url('/Images/Counter.png') @offset[digit]px 0; right: @(35 * symbol.Item2 + 5)px;"></div>
            }
        }
        Visits today
    </li>
    <li class="list-group-item counters">
        @{
            foreach (var symbol in (Model.Item2 == null ? "1" : Model.Item2.HitsToday.ToString()).Reverse().Select((x, i) => Tuple.Create(x, i)))
            {
                var digit = (int)char.GetNumericValue(symbol.Item1);
                <div class="digits" style="background: url('/Images/Counter.png') @offset[digit]px 0; right: @(35 * symbol.Item2 + 5)px;"></div>
            }
        }
        Hits today
    </li>
</ul>

<ul class="list-group col-md-4 col-md-offset-4">
    <li class="list-group-item">
        <span class="badge">@(Model.Item3 == null ? DateTime.UtcNow + TimeSpan.FromHours(5) : Model.Item3.LastVisit)</span>
        Last visit
    </li>
    <li class="list-group-item">
        <span class="badge">@(Model.Item3 == null ? "unknown" : Model.Item3.BrowserInfo)</span>
        Browser
    </li>
    <li class="list-group-item">
        <span class="badge">@(Model.Item3 == null ? "unknown" : Model.Item3.ResolutionWidth)x@(Model.Item3 == null ? "unknown" : Model.Item3.ResolutionHeight)</span>
        Resolution
    </li>
</ul>

<div class="col-md-6 col-md-offset-3">
    Boards
    <div class="list-group">
        @foreach (var b in Model.Item1)
        {
            <a class="list-group-item" href="@Url.Action("Board", "Forum", new {boardId = b.ShortName})">@($"{b.Name}")</a>
        }
    </div>
</div>
